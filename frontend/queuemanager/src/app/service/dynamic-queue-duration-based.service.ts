
// generated by ChatGPT
// Please write a JavaScript program for me. I have a pool of music files with various durations.
// I want to pick a subset of music files so that the music plays for x minutes.

function pickMusicSubset(musicFiles, targetMinutes) {
    const targetSeconds = targetMinutes * 60;
    const n = musicFiles.length;

    // DP array to store the closest sum of durations we can achieve up to each index
    let dp = Array(targetSeconds + 1).fill(false);
    dp[0] = true; // Base case, sum of 0 is always possible

    // Map to store the subset of music files that form each duration sum
    let subsets: Array<Array<number>> = Array(targetSeconds + 1).fill(null).map(() => []);

    // Traverse through each music file
    for (let i = 0; i < n; i++) {
        let duration = musicFiles[i];

        // Traverse the dp array backwards to avoid overwriting during iteration
        for (let j = targetSeconds; j >= duration; j--) {
            if (dp[j - duration]) {
                dp[j] = true;
                subsets[j] = [...subsets[j - duration], i];
            }
        }
    }

    // Find the closest duration sum to targetSeconds
    for (let i = targetSeconds; i >= 0; i--) {
        if (dp[i]) {
            const selectedIndices = subsets[i];
            const selectedFiles = selectedIndices.map(index => musicFiles[index]);
            return {
                totalDuration: i, // Duration in seconds
                files: selectedFiles,
				indexes: selectedIndices
            };
        }
    }

    return null; // No valid subset found
}


// Example usage:

const musicFiles = [180, 120, 200, 150, 300, 90]; // Durations in seconds
const targetMinutes = 8; // Target total duration in minutes

const result = pickMusicSubset(musicFiles, targetMinutes);

if (result) {
    console.log("Selected music files durations:", result.files);
    console.log("Total duration (seconds):", result.totalDuration);
    console.log("Total duration (minutes):", (result.totalDuration / 60).toFixed(2));
} else {
    console.log("No suitable subset found.");
}
